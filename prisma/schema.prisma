// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String   @id @default(cuid())
  kickUserId   String   @unique
  username     String
  email        String?
  accessToken  String   // encrypted
  refreshToken String?  // encrypted
  settings     Json?    @default("{}")
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  alerts       Alert[]
  webhooks     Webhook[]
  
  @@map("users")
}

model Alert {
  id        String   @id @default(cuid())
  userId    String
  type      String   // "follow", "subscribe", "tip"
  username  String   // Alert gönderen kişi
  message   String?
  amount    Float?   // tip amount
  data      Json?    // extra data
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("alerts")
}

model Webhook {
  id        String   @id @default(cuid())
  userId    String
  endpoint  String
  events    String[] // ["follow", "subscribe", "tip"]
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("webhooks")
}